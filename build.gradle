plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.johnrengelman.shadow' version "8.1.1"
}

group = 'com.sy.side'
version = project.findProperty("version") ?: "0.0.1"

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

ext {
    set('httpclient5Version', '5.2.1')
}
repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'com.auth0:java-jwt:4.4.0'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    api 'org.springframework.boot:spring-boot-starter-aop'
    api 'org.springframework.cloud:spring-cloud-starter-openfeign'
    api 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    api 'org.apache.httpcomponents.client5:httpclient5:5.1'
    api group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: httpclient5Version

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'jakarta.validation:jakarta.validation-api'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

shadowJar {
    archiveBaseName.set("sy-common-lib")
    archiveVersion.set("1.0.1")
    archiveClassifier.set("")
    dependencies {
        include(dependency('com.auth0:java-jwt:4.4.0'))
    }
    relocate 'com.auth0', 'com.sy.side.shadowed.auth0'
}

tasks.register('updateVersion') {
    doLast {
        def newVersion = project.findProperty("version")
        def propsFile = file("gradle.properties")
        def propsText = propsFile.text
        propsFile.text = propsText.replaceAll(/version=.*\n/, "version=${newVersion}\n")
    }
}
